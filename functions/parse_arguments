#!/usr/bin/env bash

isDefaultFun="__isDefault__"

# =========================== > make_declaration < =========================== #
function make_declaration {
    varname="${1}"
    if [ -z ${varname} ]; then
        return 0
    fi
    shift
    varval=("$@")
    echo \
        "local " \
        "${varname}=(" \
        $(printf "'%s' " ${varval[@]}) \
        ")"
}
# ────────────────────────────────── <end> ─────────────────────────────────── #

# =========================== > make_isDefault < =========================== #
function make_isDefault {
    varname="${1}"
    if [ -z ${varname} ]; then
        return 0
    fi
    shift
    printf "%b\n" \
        "\tif [[ \"\${1}\" == \"${varname}\" ]]; then return ${1}; fi"
}
# ────────────────────────────────── <end> ─────────────────────────────────── #

# =========================== > parse_arguments < ============================ #

function parse_arguments {
    declare -A arg_array
    declare -A isDefault_array
    argname=""
    argval=""
    if [ "${#args[@]}" -gt "0" ]; then
        for ((i = 0; i < ${#args[@]}; i++)); do
            arg_array["${args[$i]}"]="${argdefault[$i]}"
            isDefault_array["${args[$i]}"]=0
        done
    fi
    i=0
    while [[ $# -gt "0" ]]; do
        case "$1" in
        --*=* | -*=*) # for arguments like --a=5
            ((i++))
            if [ "$i" -gt "1" ]; then
                arg_array["$argname"]="${argval[@]}"
                isDefault_array["${argname}"]=1
            fi
            argname="${1%%=*}"
            argname="${argname#--}"
            argname="${argname#-}"
            argval=("${1#*=}")
            ;;
        --* | -*) # for arguments like --a 5
            ((i++))
            if [ "$i" -gt "1" ]; then
                arg_array["$argname"]="${argval[@]}"
                isDefault_array["${argname}"]=1
            fi
            argname="${1}"
            argname="${argname#--}"
            argname="${argname#-}"
            argval=("${2}")
            shift
            ;;
        *)
            argval+=("$1")
            if [ -z "${argname}" ]; then
                echo "err \"Invalid unnamed argument to \\\`${FUNCNAME[@]:1:1}\\\`: '${1}'\" \
                    \"Valid arguments names are: $(printf "\'%s\' " "${args[@]}")\";return 1"
            fi
            ;;
        esac
        shift
    done

    if [ ! -z "$argname" ]; then
        arg_array["${argname}"]="${argval[@]}"
        isDefault_array["${argname}"]=1
    fi

    # Check if all arguments are valid
    for argname in ${!arg_array[@]}; do
        if [[ ! " ${args[@]} " =~ " ${argname} " ]]; then
            echo "err \"Invalid argument to \\\`${FUNCNAME[@]:1:1}\\\`: '${argname}'\" \
                    \"Valid arguments names are: $(printf "\'%s\' " "${args[@]}")\";return 1"

            ((check++))
            return 1
        fi
    done

    for argname in ${!arg_array[@]}; do
        make_declaration "${argname}" "${arg_array[${argname}]}"
    done

    printf "%s\n" \
        "unset ${isDefaultFun}" \
        "function ${isDefaultFun} () {"

    for argname in ${!arg_array[@]}; do
        make_isDefault "${argname}" "${isDefault_array[${argname}]}"
    done

    printf "%s\n" \
        "}" \
        "export ${isDefaultFun}"

}
# ────────────────────────────────── <end> ─────────────────────────────────── #
